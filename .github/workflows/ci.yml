name: Test and Publish Docker Image

on:
  workflow_dispatch:
    inputs: {}
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        ruby: ['3.2.2']
    runs-on: ${{ matrix.os }}
    name: Tests with Ruby ${{ matrix.ruby }}

    services:
      postgres:
        image: postgres:15
        env:
          PGUSER: postgres
          PGPASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install DB Dependencies and Check Connections
        run: |
          DEBIAN_FRONTEND="noninteractive" sudo apt-get install -yqq postgresql-client libpq-dev
          env PGPASSWORD=postgres psql -h localhost -p ${{ job.services.postgres.ports[5432] }} -U postgres -l

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Install Ruby Dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build and Create PostgreSQL Database
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_ENV: test
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Run Tests
        run: HEADLESS=true bundle exec rake 

      - name: Run Rubocop
        run: bundle exec rubocop

  push_to_registry:
    needs: tests
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        # https://github.com/actions/checkout/#usage
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        # https://github.com/docker/login-action/#usage
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # https://github.com/docker/metadata-action/#usage
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # https://github.com/docker/metadata-action/tree/releases/v4#typesemver
          tags: |
            type=semver,pattern={{major}}.{{minor}},value=v1.1.0
          # https://github.com/docker/metadata-action/tree/master#latest-tag
          # tags: |
          #   type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push the blah_blah_chat Docker image
        # https://github.com/docker/build-push-action/#usage
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
